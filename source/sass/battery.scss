$factor: 2;
$batteryWidth: 16px * $factor;
$batteryHeight: 24px * $factor;
$batteryContactWidth: 6px * $factor;
$batteryContactHeight: 3px *$factor;
$batteryBorder: 1px * $factor;
$batteryFontSize: 10px * $factor;

@import url(https://fonts.googleapis.com/css?family=Share+Tech);

body {
  font-family: 'Share Tech', sans-serif;
  &[data-bat-rating="charging"],
  &[data-bat-rating="best"] {
    .battery {
      background-color: green;
      color: white;
      &::before {
        background-color: green;
      }
    }
  }
  &[data-bat-rating="good"] {
    .battery {
      background-color: lime;
      &::before {
        background-color: lime;
      }
    }
  }
  &[data-bat-rating="mediocre"] {
    .battery {
      background-color: yellow;
      &::before {
        background-color: yellow;
      }
    }
  }
  &[data-bat-rating="bad"] {
    .battery {
      background-color: orange;
      &::before {
        background-color: orange;
      }
    }
  }
  &[data-bat-rating="worst"] {
    .battery {
      background-color: red;
      &::before {
        background-color: red;
      }
    }
  }
  &[data-bat-charge="charging"] {
    .chargestatus {
      &::after {
        content: 'ðŸ”Œ';
      }
    }
  }
  &[data-bat-charge="discharging"] {
    .chargestatus {
      &::after {
        content: 'ðŸ”‹';
      }
    }
  }

  @for $i from 0 through 100 {
    &[data-bat-percent="#{$i}"] {
      .battery_fill {
        @if ($i > 80) {
          background-image: linear-gradient(to top, rgba(80, 200, 10, 1) 0%, rgba(80, 180, 10, 1) 0% + $i, rgba(255, 255, 255, 1) 15% + $i, rgba(255, 255, 255, 1) 100%);
        } @else if ($i > 50) {
          background-image: linear-gradient(to top, rgba(120, 255, 10, 1) 0%, rgba(120, 200, 10, 1) 0% + $i, rgba(255, 255, 255, 1) 15% + $i, rgba(255, 255, 255, 1) 100%);
        } @else if ($i > 15) {
          background-image: linear-gradient(to top, rgba(255, 255, 10, 1) 0%, rgba(200, 200, 10, 1) 0% + $i, rgba(255, 255, 255, 1) 15% + $i, rgba(255, 255, 255, 1) 100%);
        } @else if ($i > 5) {
          background-image: linear-gradient(to top, rgba(255, 120, 10, 1) 0%, rgba(200, 120, 10, 1) 0% + $i, rgba(255, 255, 255, 1) 15% + $i, rgba(255, 255, 255, 1) 100%);
        } @else {
          background-image: linear-gradient(to top, rgba(255, 80, 10, 1) 0%, rgba(200, 80, 10, 1) 0% + $i, rgba(255, 255, 255, 1) 15% + $i, rgba(255, 255, 255, 1) 100%);
        }
        &::after {
          content: '#{$i}';
        }
      }
    }
  }

}

%batteryBase {
  background-color: white;
  border: $batteryBorder solid black;
  transition: all 2s;
}

.battery, .battery_js, .battery_fill {
  @extend %batteryBase;
  position: relative;
  display: inline-block;
  margin-top: $batteryContactHeight;
  width: $batteryWidth - 2 * $batteryBorder;
  height: $batteryHeight - $batteryContactHeight - $batteryBorder;
  line-height: $batteryHeight - $batteryContactHeight - $batteryBorder;
  font-size: $batteryFontSize;
  text-align: center;
  border-radius: 2 * $batteryBorder;
  &::before {
    @extend %batteryBase;
    content: '';
    position: absolute;
    top: -$batteryContactHeight;
    left: $batteryWidth / 2 - $batteryContactWidth / 2 - $batteryBorder;
    width: $batteryContactWidth - 2 * $batteryBorder;
    height: $batteryContactHeight - $batteryBorder;
    border-bottom: none;
  }
  &::after {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
}

.chargestatus {
  display: inline-block;
  font-size: $batteryWidth;
}


// Log styling and placing

article.log {
  margin-right: 340px;
}

#log {
  position: fixed;
  margin: 0;
  width: 280px;
  height: 300px;
  right: 10px;
  top: 10px;
  overflow-x: hidden;
  overflow-y: auto;
  &::after {
    content: '';
    display: block;
    position: inherit;
    width: inherit;
    height: inherit;
    top: inherit;
    left: inherit;
    overflow: hidden;
    background-image: linear-gradient(to top, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0) 100%);
  }
  .log {
    color: #0c0;
  }
  .warn {
    color: orange;
  }
  .error {
    color: red;
  }
  .value {
    text-decoration: underline;
  }
}
